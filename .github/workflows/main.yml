name: Build

on: [ workflow_dispatch, push ]

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        arch: [ "arm", "arm64" ]

    name: Build For Android (libraries and apks)
    runs-on: namespace-profile-anglebuild
    steps:
      - name: Set TMPDIR to workspace tmp directory
        run: |
          mkdir -p "$GITHUB_WORKSPACE/tmp"
          echo "TMPDIR=$GITHUB_WORKSPACE/tmp" >> "$GITHUB_ENV"
    
      - uses: namespacelabs/nscloud-setup@v0
    
      - name: Setup CCache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          ccache_options: |
            max_size=30000MB
            compression=false
    
      

      - name: Get & Install depot_tools
        run: |
          git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH

      - name: Get CCache caches
        id: ccache-caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ~/.ccache

      - name: Get Angle dependencies caches
        id: angle-caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ./.cipd
            ./third_party
          
      - name: Get Gradle caches
        id: gradle-caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          cache: gradle
          
      - name: Bootstrap and Sync Angle
        run: |
          vpython3 scripts/bootstrap.py
          gclient sync --no-history --no-hardlinks -j$(nproc)

      - name: Make GN arg
        run: |
          mkdir -p out/Android-${{matrix.arch}}
          
          echo "target_os = 'android'
          target_cpu = '${{matrix.arch}}'
          is_component_build = false
          is_debug = false
          angle_assert_always_on = false
          is_clang = true
          proprietary_codecs = true
          dcheck_always_on = false

          cc_wrapper='env CCACHE_SLOPPINESS=time_macros ccache'

          android32_ndk_api_level = 29

          symbol_level = 0
          strip_debug_info = true
          generate_debug_info = false
          enable_resource_allowlist_generation = false
          use_thin_lto = true
          
          angle_enable_vulkan = true
          angle_enable_vulkan_validation_layers = false

          angle_enable_essl = true
          angle_enable_glsl = true
          angle_enable_hlsl = false

          angle_enable_gl = false
          angle_enable_d3d9 = false
          angle_enable_d3d11 = false
          angle_enable_null = false
          angle_enable_metal = false
          angle_enable_swiftshader = false

          angle_expose_non_conformant_extensions_and_versions = true
          
          build_angle_deqp_tests = false
          " > out/Android-${{matrix.arch}}/args.gn

          gn gen out/Android-${{matrix.arch}}

      - name: Build Angle (libraries)
        run: |
          autoninja -j$(nproc) -C out/Android-${{matrix.arch}}

      - name: Build Angle (apk)
        run: |
          autoninja -j$(nproc) -C out/Android-${{matrix.arch}} angle_apks

      - name: Upload Build Outputs (apk)
        uses: actions/upload-artifact@v4
        with:
          name: apks-${{matrix.arch}}
          path: |
            out/Android-${{matrix.arch}}/apks

      - name: Upload Build Outputs (libs)
        uses: actions/upload-artifact@v4
        with:
          name: libs-${{matrix.arch}}
          path: |
            out/Android-${{matrix.arch}}/*.so
            out/Android-${{matrix.arch}}/lib.unstripped

      - name: Save CCache caches
        uses: namespacelabs/nscloud-cache-action@v1
        if: steps.ccache-caches.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.ccache

      - name: Save Angle dependencies caches
        uses: namespacelabs/nscloud-cache-action@v1
        if: steps.angle-caches.outputs.cache-hit != 'true'
        with:
          path: |
            ./.cipd
            ./third_party
          
      - name: Save Gradle caches
        uses: namespacelabs/nscloud-cache-action@v1
        if: steps.gradle-caches.outputs.cache-hit != 'true'
        with:
          cache: gradle
            
         
