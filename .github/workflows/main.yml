name: Build

on: [ workflow_dispatch, push ]

jobs:
  build:
    strategy:
      matrix:
        arch: [ "arm", "arm64" ]

    name: Build For Android (libraries and apks)
    runs-on: nscloud-ubuntu-ubuntu-24.04-amd64-8x12
    steps:
      - name: Install CCache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
    
      - name: Get Angle
        uses: actions/checkout@v4
        with:
          path: 'angle'
          fetch-depth: 1

      - name: Get & Install depot_tools
        run: |
          git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH

      - name: Cache Angle dependencies
        id: angle-deps-cache
        uses: actions/cache@v4
        with:
          path: |
            angle/.cipd
            angle/third_party
          key: ${{ runner.os }}-angle-deps-${{ matrix.arch }}-${{ hashFiles('angle/DEPS') }}
          restore-keys: |
            ${{ runner.os }}-angle-deps-${{ matrix.arch }}-${{ hashFiles('angle/DEPS') }}
          
      - name: Bootstrap and Sync Angle
        run: |
          cd angle
          vpython3 scripts/bootstrap.py
          gclient sync --no-history -v -j$(nproc)

      - name: Make GN arg
        run: |
          cd angle
          mkdir -p out/Android-${{matrix.arch}}
          
          echo "target_os = 'android'
          target_cpu = '${{matrix.arch}}'
          is_component_build = false
          is_debug = false
          angle_assert_always_on = false
          is_clang = true
          proprietary_codecs = true
          dcheck_always_on = false

          cc_wrapper='env CCACHE_SLOPPINESS=time_macros ccache'

          android32_ndk_api_level = 29

          symbol_level = 0
          strip_debug_info = true
          generate_debug_info = false
          enable_resource_allowlist_generation = false
          use_thin_lto = true
          
          angle_enable_vulkan = true
          angle_enable_vulkan_validation_layers = false

          angle_enable_essl = true
          angle_enable_glsl = true
          angle_enable_hlsl = false

          angle_enable_gl = false
          angle_enable_d3d9 = false
          angle_enable_d3d11 = false
          angle_enable_null = false
          angle_enable_metal = false
          angle_enable_swiftshader = false

          angle_expose_non_conformant_extensions_and_versions = true
          
          build_angle_deqp_tests = false
          " > out/Android-${{matrix.arch}}/args.gn

          gn gen out/Android-${{matrix.arch}}

      - name: Build Angle (libraries)
        run: |
          cd angle
          autoninja -j$(nproc) -C out/Android-${{matrix.arch}}

      - name: Build Angle (apk)
        run: |
          cd angle
          autoninja -j$(nproc) -C out/Android-${{matrix.arch}} angle_apks

      - name: Upload Build Outputs (apk)
        uses: actions/upload-artifact@v4
        with:
          name: apks-${{matrix.arch}}
          path: |
            angle/out/Android-${{matrix.arch}}/apks

      - name: Upload Build Outputs (libs)
        uses: actions/upload-artifact@v4
        with:
          name: libs-${{matrix.arch}}
          path: |
            angle/out/Android-${{matrix.arch}}/*.so
            angle/out/Android-${{matrix.arch}}/lib.unstripped
            
         
